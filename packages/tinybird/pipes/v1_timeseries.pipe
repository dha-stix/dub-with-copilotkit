DESCRIPTION >
	Timeseries data


TOKEN "v2_timeseries_endpoint_read_1559" READ

NODE month_intervals
SQL >

    %
    WITH
        toStartOfMonth(
            toDateTime64({{ DateTime64(start, '2024-02-24 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfMonth(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end,
    dateDiff('month', start, end) + 1 AS months_diff
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(start + toIntervalMonth(x), 3, {{ String(timezone, 'UTC') }}),
                range(0, months_diff)
            )
        ) as interval



NODE day_intervals
SQL >

    %
    WITH
        toStartOfDay(
            toDateTime64({{ DateTime64(start, '2024-02-24 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfDay(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(toStartOfDay(toDateTime64(x, 3), {{ String(timezone, 'UTC') }}), 3),
                range(toUInt32(start + 86400), toUInt32(end + 86400),
                86400
            )
        )
    ) as interval



NODE hour_intervals
SQL >

    %
    WITH
        toStartOfHour(
            toDateTime64({{ DateTime64(start, '2024-05-22 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS start,
        toStartOfHour(
            toDateTime64({{ DateTime64(end, '2024-05-23 00:00:00.000') }}, 3),
            {{ String(timezone, 'UTC') }}
        ) AS
    end
    SELECT
        arrayJoin(
            arrayMap(x -> toDateTime64(x, 3), range(toUInt32(start + 3600), toUInt32(end + 3600), 3600)
        )
    ) as interval



NODE workspace_links
SQL >

    %
    SELECT link_id
    from dub_links_metadata_latest FINAL
    WHERE
        workspace_id
        = {{
            String(
                workspaceId,
                'ws_cl7pj5kq4006835rbjlt2ofka',
                description="The ID of the workspace",
                required=True,
            )
        }}
        AND deleted == 0
        {% if defined(domain) %} AND domain IN {{ Array(domain, 'String') }} {% end %}
        {% if defined(tagId) %} AND has(tag_ids, {{ tagId }}) {% end %}
        {% if defined(root) %}
            {% if Boolean(root) == 1 %} AND key = '_root' {% else %} AND key != '_root' {% end %}
        {% end %}



NODE timeseries_clicks_data
SQL >

    %
    SELECT
        {% if granularity == "hour" %} toStartOfHour(timestamp, {{ String(timezone, 'UTC') }})
        {% elif granularity == "month" %}
            toDateTime64(
                toStartOfMonth(timestamp, {{ String(timezone, 'UTC') }}),
                3,
                {{ String(timezone, 'UTC') }}
            )
        {% else %} toDateTime64(toStartOfDay(timestamp, {{ String(timezone, 'UTC') }}), 3)
        {% end %} AS interval,
        uniq(*) as clicks
    FROM
        dub_click_events_mv
        {% if not defined(linkId) and defined(workspaceId) %}
            PREWHERE link_id in (SELECT link_id from workspace_links)
        {% end %}
    WHERE
        true
        {% if defined(linkId) %}
            AND link_id
            = {{
                String(
                    linkId,
                    'clsdzhhlq0003vskwcaz6nm39',
                    description="The ID of the link",
                )
            }}
        {% end %}
        {% if defined(qr) %} AND qr = {{ Boolean(qr) }} {% end %}
        {% if defined(continent) %} AND continent = {{ continent }} {% end %}
        {% if defined(country) %} AND country = {{ country }} {% end %}
        {% if defined(city) %} AND city = {{ city }} {% end %}
        {% if defined(device) %} AND device = {{ device }} {% end %}
        {% if defined(browser) %} AND browser = {{ browser }} {% end %}
        {% if defined(os) %} AND os = {{ os }} {% end %}
        {% if defined(referer) %} AND referer = {{ referer }} {% end %}
        {% if defined(url) %} AND url = {{ url }} {% end %}
        AND timestamp >= {{ DateTime(start, '2024-04-25 00:00:00') }}
        AND timestamp < {{ DateTime(end, '2024-05-23 00:00:00') }}
    GROUP BY interval
    ORDER BY interval



NODE timeseries_clicks
SQL >

    %
    SELECT formatDateTime(interval, '%FT%T.000%z') as start, clicks
    FROM
        {% if granularity == "minute" %} minute_intervals
        {% elif granularity == "hour" %} hour_intervals
        {% elif granularity == "month" %} month_intervals
        {% else %} day_intervals
        {% end %}
    LEFT JOIN timeseries_clicks_data USING interval



NODE timeseries_leads_data
SQL >

    %
    SELECT
        {% if granularity == "hour" %} toStartOfHour(timestamp, {{ String(timezone, 'UTC') }})
        {% elif granularity == "month" %}
            toDateTime64(
                toStartOfMonth(timestamp, {{ String(timezone, 'UTC') }}),
                3,
                {{ String(timezone, 'UTC') }}
            )
        {% else %} toDateTime64(toStartOfDay(timestamp, {{ String(timezone, 'UTC') }}), 3)
        {% end %} AS interval,
        uniq(*) as leads
    FROM
        dub_lead_events_mv
        {% if not defined(linkId) and defined(workspaceId) %}
            PREWHERE link_id in (SELECT link_id from workspace_links)
        {% end %}
    WHERE
        true
        {% if defined(linkId) %}
            AND link_id
            = {{
                String(
                    linkId,
                    'clsdzhhlq0003vskwcaz6nm39',
                    description="The ID of the link",
                )
            }}
        {% end %}
        {% if defined(qr) %} AND qr = {{ Boolean(qr) }} {% end %}
        {% if defined(continent) %} AND continent = {{ continent }} {% end %}
        {% if defined(country) %} AND country = {{ country }} {% end %}
        {% if defined(city) %} AND city = {{ city }} {% end %}
        {% if defined(device) %} AND device = {{ device }} {% end %}
        {% if defined(browser) %} AND browser = {{ browser }} {% end %}
        {% if defined(os) %} AND os = {{ os }} {% end %}
        {% if defined(referer) %} AND referer = {{ referer }} {% end %}
        {% if defined(url) %} AND url = {{ url }} {% end %}
        AND timestamp >= {{ DateTime(start, '2024-04-25 00:00:00') }}
        AND timestamp < {{ DateTime(end, '2024-05-23 00:00:00') }}
    GROUP BY interval
    ORDER BY interval



NODE timeseries_leads
SQL >

    %
    SELECT formatDateTime(interval, '%FT%T.000%z') as start, leads
    FROM
        {% if granularity == "minute" %} minute_intervals
        {% elif granularity == "hour" %} hour_intervals
        {% elif granularity == "month" %} month_intervals
        {% else %} day_intervals
        {% end %}
    LEFT JOIN timeseries_leads_data USING interval



NODE timeseries_sales_data
DESCRIPTION >
    undefined

SQL >

    %
    SELECT
        {% if granularity == "hour" %} toStartOfHour(timestamp, {{ String(timezone, 'UTC') }})
        {% elif granularity == "month" %}
            toDateTime64(
                toStartOfMonth(timestamp, {{ String(timezone, 'UTC') }}),
                3,
                {{ String(timezone, 'UTC') }}
            )
        {% else %} toDateTime64(toStartOfDay(timestamp, {{ String(timezone, 'UTC') }}), 3)
        {% end %} AS interval,
        uniq(*) as sales,
        sum(amount) as amount
    FROM
        dub_sale_events_mv
        {% if not defined(linkId) and defined(workspaceId) %}
            PREWHERE link_id in (SELECT link_id from workspace_links)
        {% end %}
    WHERE
        true
        {% if defined(linkId) %}
            AND link_id
            = {{
                String(
                    linkId,
                    'clsdzhhlq0003vskwcaz6nm39',
                    description="The ID of the link",
                )
            }}
        {% end %}
        {% if defined(qr) %} AND qr = {{ Boolean(qr) }} {% end %}
        {% if defined(continent) %} AND continent = {{ continent }} {% end %}
        {% if defined(country) %} AND country = {{ country }} {% end %}
        {% if defined(city) %} AND city = {{ city }} {% end %}
        {% if defined(device) %} AND device = {{ device }} {% end %}
        {% if defined(browser) %} AND browser = {{ browser }} {% end %}
        {% if defined(os) %} AND os = {{ os }} {% end %}
        {% if defined(referer) %} AND referer = {{ referer }} {% end %}
        {% if defined(url) %} AND url = {{ url }} {% end %}
        AND timestamp >= {{ DateTime(start, '2024-04-25 00:00:00') }}
        AND timestamp < {{ DateTime(end, '2024-05-23 00:00:00') }}
    GROUP BY interval
    ORDER BY interval



NODE timeseries_sales
SQL >

    %
    SELECT formatDateTime(interval, '%FT%T.000%z') as start, sales, amount
    FROM
        {% if granularity == "minute" %} minute_intervals
        {% elif granularity == "hour" %} hour_intervals
        {% elif granularity == "month" %} month_intervals
        {% else %} day_intervals
        {% end %}
    LEFT JOIN timeseries_sales_data USING interval



NODE timeseries_composite
SQL >

    SELECT dce.start AS start, clicks, leads, sales, amount
    FROM (SELECT start, clicks FROM timeseries_clicks) AS dce
    LEFT JOIN (SELECT * FROM  timeseries_leads) AS dle ON dce.start = dle.start
    LEFT JOIN (SELECT * FROM timeseries_sales) AS dse ON dce.start = dse.start



NODE timeseries_billing
SQL >

    SELECT
        dce.start AS start,
        clicks,
        leads,
        sales,
        amount,
        (clicks + leads + sales) AS total_events,
        amount / 200 as billable_sales
    FROM (SELECT start, clicks FROM timeseries_clicks) AS dce
    LEFT JOIN (SELECT * FROM timeseries_leads) AS dle ON dce.start = dle.start
    LEFT JOIN (SELECT * FROM timeseries_sales) AS dse ON dce.start = dse.start



NODE endpoint
SQL >

    %
    SELECT *
    FROM
        {% if eventType == 'clicks' %} timeseries_clicks
        {% elif eventType == 'leads' %} timeseries_leads
        {% elif eventType == 'sales' %} timeseries_sales
        {% elif eventType == 'billing' %} timeseries_billing
        {% else %} timeseries_composite
        {% end %}


